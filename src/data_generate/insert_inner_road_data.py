import mysql.connector
from mysql.connector import Error

# 准备200条道路数据
data = [(1, 2, 45.29, 0.93, 1), (1, 26, 85.23, 0.99, 1), (2, 3, 59.66, 0.98, 1), (2, 4, 33.36, 0.81, 1), (4, 5, 59.66, 0.84, 0), (4, 24, 76.7, 0.8, 1), (4, 8, 44.48, 0.92, 1), (6, 7, 11.12, 0.84, 1), (7, 8, 68.18, 0.86, 1), (7, 9, 56.25, 0.81, 1), (8, 23, 85.23, 0.83, 1), (8, 10, 56.25, 0.93, 1), (9, 10, 68.18, 0.94, 1), (9, 11, 111.19, 0.99, 1), (10, 20, 76.7, 0.94, 1), (10, 12, 111.19, 0.92, 1), (11, 12, 68.18, 0.83, 1), (11, 13, 66.72, 0.95, 0), (12, 19, 76.71, 0.86, 1), (13, 18, 153.41, 0.96, 1), (13, 14, 56.25, 0.82, 1), (14, 15, 34.09, 0.86, 1), (14, 16, 55.6, 0.92, 1), (16, 17, 144.89, 0.92, 1), (16, 71, 66.72, 1.0, 1), (17, 69, 55.6, 0.89, 1), (17, 65, 119.84, 0.95, 1), (18, 19, 67.26, 0.88, 1), (18, 64, 119.84, 0.82, 1), (19, 55, 128.33, 0.91, 0), (19, 21, 55.6, 0.98, 0), (20, 21, 55.6, 0.86, 1), (20, 54, 128.32, 0.89, 0), (21, 22, 8.52, 0.83, 0), (23, 24, 45.29, 1.0, 1), (23, 57, 119.32, 0.89, 0), (24, 25, 22.24, 0.91, 1), (25, 27, 68.18, 0.85, 1), (25, 26, 55.6, 0.99, 1), (27, 28, 55.6, 0.92, 0), (27, 29, 17.05, 0.92, 1), (29, 30, 22.24, 0.97, 1), (29, 31, 42.61, 0.82, 1), (31, 32, 11.12, 0.94, 1), (31, 57, 66.72, 0.83, 1), (32, 33, 22.24, 0.82, 1), (32, 34, 69.08, 0.96, 1), (34, 35, 23.82, 0.92, 1), (34, 36, 25.57, 0.87, 1), (35, 38, 127.84, 0.94, 1), (36, 37, 51.14, 0.81, 1), (36, 47, 100.08, 0.96, 1), (37, 40, 42.61, 0.95, 0), (37, 42, 44.48, 0.89, 1), (38, 39, 22.24, 0.93, 1), (38, 40, 22.24, 0.9, 0), (40, 41, 44.48, 0.85, 0), (41, 42, 42.61, 0.9, 1), (41, 44, 44.48, 0.94, 0), (42, 43, 44.48, 0.93, 1), (43, 44, 42.61, 0.88, 0), (43, 45, 33.36, 0.95, 1), (44, 46, 33.36, 0.93, 1), (45, 46, 42.61, 0.91, 1), (45, 49, 56.25, 0.84, 1), (46, 59, 222.55, 0.98, 1), (47, 48, 78.3, 0.91, 1), (47, 58, 85.23, 0.82, 1), (48, 53, 93.75, 0.99, 1), (48, 49, 51.14, 0.93, 1), (49, 50, 44.04, 0.84, 1), (49, 51, 66.72, 0.85, 0), (50, 52, 77.84, 0.81, 1), (51, 52, 42.61, 0.93, 1), (51, 56, 93.75, 0.92, 0), (52, 59, 100.08, 0.82, 1), (53, 54, 44.48, 0.88, 1), (53, 55, 66.72, 0.82, 1), (54, 58, 33.36, 0.88, 1), (55, 56, 51.14, 0.81, 1), (55, 64, 66.72, 0.99, 1), (56, 63, 66.72, 0.8, 1), (57, 58, 14.01, 0.98, 0), (59, 60, 34.09, 0.88, 1), (60, 61, 22.24, 0.87, 0), (61, 62, 102.28, 0.98, 0), (62, 63, 11.12, 0.89, 0), (62, 66, 100.44, 0.83, 0), (63, 64, 51.14, 0.93, 1), (64, 65, 111.19, 0.85, 1), (65, 66, 59.66, 0.82, 1), (65, 68, 66.72, 0.84, 1), (66, 67, 66.72, 0.96, 1), (67, 68, 59.66, 0.83, 1), (68, 69, 119.32, 0.93, 0), (69, 70, 45.29, 0.85, 0), (69, 71, 145.32, 0.89, 0), (70, 72, 85.23, 0.83, 0), (70, 99, 44.48, 0.81, 1), (70, 100, 110.8, 0.85, 0), (72, 73, 68.19, 0.84, 0), (72, 75, 33.36, 0.91, 1), (73, 74, 33.36, 0.91, 1), (74, 75, 68.19, 0.9, 1), (74, 77, 33.36, 0.89, 1), (75, 76, 33.36, 0.87, 1), (76, 77, 68.19, 0.91, 1), (76, 80, 56.25, 0.85, 0), (77, 78, 55.6, 0.98, 1), (78, 80, 76.71, 0.87, 1), (78, 79, 33.36, 0.88, 1), (79, 85, 204.56, 0.98, 1), (80, 81, 22.24, 0.88, 1), (81, 82, 76.71, 0.93, 1), (82, 83, 44.48, 0.83, 0), (82, 84, 51.14, 0.8, 1), (83, 99, 55.6, 0.92, 1), (83, 91, 110.8, 0.88, 1), (84, 89, 59.66, 0.92, 1), (84, 85, 11.12, 0.94, 1), (85, 86, 22.24, 0.96, 0), (85, 87, 76.71, 0.89, 0), (87, 88, 11.12, 0.93, 0), (88, 90, 34.09, 0.85, 1), (88, 89, 17.05, 0.87, 1), (89, 91, 44.48, 0.85, 1), (90, 93, 22.24, 0.92, 1), (90, 95, 51.14, 0.8, 0), (91, 92, 94.41, 0.83, 1), (91, 96, 44.48, 1.0, 1), (93, 94, 51.14, 0.89, 0), (94, 95, 22.24, 0.97, 1), (96, 97, 68.19, 0.88, 0), (96, 98, 11.12, 0.86, 1), (98, 99, 110.8, 0.95, 1), (98, 100, 44.48, 0.8, 1), (100, 101, 76.71, 0.86, 1), (101, 102, 33.36, 0.98, 0), (101, 103, 119.32, 0.91, 1), (102, 104, 102.28, 0.95, 1), (104, 105, 88.96, 0.95, 1), (2, 1, 45.29, 0.99, 1), (26, 1, 85.23, 0.89, 1), (3, 2, 59.66, 0.97, 1), (4, 2, 33.36, 0.97, 1), (5, 4, 59.66, 0.91, 1), (24, 4, 76.7, 0.99, 1), (8, 4, 44.48, 0.98, 1), (7, 6, 11.12, 0.96, 1), (8, 7, 68.18, 0.93, 1), (9, 7, 56.25, 0.92, 0), (23, 8, 85.23, 0.94, 1), (10, 8, 56.25, 0.9, 0), (10, 9, 68.18, 0.85, 0), (11, 9, 111.19, 0.97, 0), (20, 10, 76.7, 0.97, 1), (12, 10, 111.19, 0.87, 0), (12, 11, 68.18, 0.81, 1), (13, 11, 66.72, 0.92, 1), (19, 12, 76.71, 0.82, 0), (18, 13, 153.41, 1.0, 1), (14, 13, 56.25, 0.82, 1), (15, 14, 34.09, 0.91, 1), (16, 14, 55.6, 0.99, 1), (17, 16, 144.89, 0.95, 1), (71, 16, 66.72, 0.86, 1), (69, 17, 55.6, 0.89, 1), (65, 17, 119.84, 0.8, 0), (19, 18, 67.26, 0.85, 1), (64, 18, 119.84, 0.81, 1), (55, 19, 128.33, 0.92, 0), (21, 19, 55.6, 0.95, 0), (21, 20, 55.6, 0.82, 1), (54, 20, 128.32, 0.97, 1), (22, 21, 8.52, 0.91, 0), (24, 23, 45.29, 0.95, 1), (57, 23, 119.32, 0.95, 1), (25, 24, 22.24, 0.96, 1), (27, 25, 68.18, 0.9, 0), (26, 25, 55.6, 0.93, 0), (28, 27, 55.6, 0.85, 1), (29, 27, 17.05, 0.99, 0), (30, 29, 22.24, 0.91, 1), (31, 29, 42.61, 0.92, 1), (32, 31, 11.12, 0.96, 0), (57, 31, 66.72, 0.88, 0), (33, 32, 22.24, 0.81, 0), (34, 32, 69.08, 0.92, 1), (35, 34, 23.82, 0.85, 1), (36, 34, 25.57, 0.88, 0), (38, 35, 127.84, 0.98, 1), (37, 36, 51.14, 0.93, 1), (47, 36, 100.08, 0.93, 1), (40, 37, 42.61, 0.91, 0), (42, 37, 44.48, 0.84, 0), (39, 38, 22.24, 0.83, 1), (40, 38, 22.24, 0.93, 1), (41, 40, 44.48, 0.98, 0), (42, 41, 42.61, 0.84, 1), (44, 41, 44.48, 1.0, 1), (43, 42, 44.48, 0.94, 1), (44, 43, 42.61, 0.89, 1), (45, 43, 33.36, 0.83, 1), (46, 44, 33.36, 0.98, 0), (46, 45, 42.61, 0.88, 1), (49, 45, 56.25, 0.93, 1), (59, 46, 222.55, 0.82, 1), (48, 47, 78.3, 0.81, 1), (58, 47, 85.23, 0.92, 0), (53, 48, 93.75, 0.95, 0), (49, 48, 51.14, 0.93, 1), (50, 49, 44.04, 0.99, 0), (51, 49, 66.72, 0.8, 1), (52, 50, 77.84, 1.0, 1), (52, 51, 42.61, 0.82, 1), (56, 51, 93.75, 0.96, 0), (59, 52, 100.08, 0.94, 1), (54, 53, 44.48, 0.95, 0), (55, 53, 66.72, 0.85, 1), (58, 54, 33.36, 0.83, 1), (56, 55, 51.14, 0.95, 0), (64, 55, 66.72, 0.92, 1), (63, 56, 66.72, 0.83, 1), (58, 57, 14.01, 0.83, 1), (60, 59, 34.09, 0.97, 1), (61, 60, 22.24, 0.82, 0), (62, 61, 102.28, 0.92, 0), (63, 62, 11.12, 0.84, 1), (66, 62, 100.44, 0.84, 1), (64, 63, 51.14, 0.91, 0), (65, 64, 111.19, 0.89, 1), (66, 65, 59.66, 0.89, 1), (68, 65, 66.72, 0.9, 1), (67, 66, 66.72, 0.83, 1), (68, 67, 59.66, 0.87, 1), (69, 68, 119.32, 0.98, 1), (70, 69, 45.29, 0.86, 1), (71, 69, 145.32, 0.83, 1), (72, 70, 85.23, 0.91, 1), (99, 70, 44.48, 0.98, 1), (100, 70, 110.8, 0.85, 0), (73, 72, 68.19, 0.98, 0), (75, 72, 33.36, 0.85, 0), (74, 73, 33.36, 0.81, 0), (75, 74, 68.19, 0.82, 1), (77, 74, 33.36, 0.95, 1), (76, 75, 33.36, 0.97, 1), (77, 76, 68.19, 0.82, 1), (80, 76, 56.25, 0.91, 0), (78, 77, 55.6, 0.83, 1), (80, 78, 76.71, 0.88, 1), (79, 78, 33.36, 0.89, 1), (85, 79, 204.56, 0.92, 0), (81, 80, 22.24, 0.89, 0), (82, 81, 76.71, 0.84, 1), (83, 82, 44.48, 0.82, 1), (84, 82, 51.14, 0.82, 1), (99, 83, 55.6, 0.82, 1), (91, 83, 110.8, 0.95, 1), (89, 84, 59.66, 0.91, 1), (85, 84, 11.12, 0.87, 0), (86, 85, 22.24, 0.94, 1), (87, 85, 76.71, 0.95, 1), (88, 87, 11.12, 0.85, 1), (90, 88, 34.09, 0.84, 0), (89, 88, 17.05, 0.85, 0), (91, 89, 44.48, 0.88, 1), (93, 90, 22.24, 0.98, 1), (95, 90, 51.14, 1.0, 0), (92, 91, 94.41, 0.98, 0), (96, 91, 44.48, 0.95, 0), (94, 93, 51.14, 0.81, 0), (95, 94, 22.24, 0.87, 1), (97, 96, 68.19, 0.94, 1), (98, 96, 11.12, 0.98, 0), (99, 98, 110.8, 0.86, 1), (100, 98, 44.48, 0.89, 0), (101, 100, 76.71, 0.82, 1), (102, 101, 33.36, 1.0, 1), (103, 101, 119.32, 0.86, 1), (104, 102, 102.28, 0.93, 1), (105, 104, 88.96, 0.99, 0)]

try:
    # 连接到数据库
    connection = mysql.connector.connect(
        host='localhost',          # 替换为你的主机地址
        database='tour_system',    # 替换为你的数据库名称
        user='root',                # 替换为你的数据库用户名
        password='123456'         # 替换为你的数据库密码
    )

    if connection.is_connected():
        cursor = connection.cursor()

        # 插入数据的SQL语句
        sql_insert_query = """
            INSERT INTO innerroads (start_location_id, end_location_id, distance, congestion_factor, flag)
            VALUES (%s, %s, %s, %s,%s)
        """
        
        # 批量插入数据
        cursor.executemany(sql_insert_query, data)
        connection.commit()
        print(cursor.rowcount, "innerroads were inserted successfully.")

except Error as e:
    print("Error while connecting to MySQL", e)

finally:
    if connection.is_connected():
        cursor.close()
        connection.close()
        print("MySQL connection is closed")
